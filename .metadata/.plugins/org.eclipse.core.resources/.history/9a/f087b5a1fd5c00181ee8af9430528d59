package com.bizleap.training.ds.loader.impl.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.io.IOException;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.log4j.Logger;
import org.junit.Ignore;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.bizleap.commons.domain.exception.ServiceUnavailableException;
import com.bizleap.training.ds.loader.DataManager;
import com.bizleap.training.ds.loader.impl.test.ServiceTest;
import com.bizleap.training.ds.service.CompanyService;
import com.bizleap.training.ds.service.EmployeeService;

import com.bizleap.commons.domain.Company;
import com.bizleap.commons.domain.Employee;


public class DataManagerImplTest extends ServiceTest{
		
	@Autowired
	@Qualifier("dataManager")
	protected DataManager dataManager;
	
	static Logger logger=Logger.getLogger(DataManagerImplTest.class);
	
	@Autowired
	CompanyService companyService;
	
	@Autowired
	EmployeeService employeeService;
	
	@Test
	public void testfindByCompanyBoId()throws ServiceUnavailableException{
		companyService.getAllCompany();
		assertEquals(3,companyService.getAllCompany().size());		
	}
	
	@Test
	public void testfindByEmployeeBoId()throws ServiceUnavailableException{
		employeeService.getAllEmployee();
		assertEquals(6,employeeService.getAllEmployee().size());		
	}
	
	
	//@Ignore
	@Test
	public void testLoad() throws IOException, ServiceUnavailableException {
		dataManager.load();
		
		assertNotNull(dataManager.getEmployeeList());
		logger.info("Employee List:"+dataManager.getEmployeeList());
		assertTrue(CollectionUtils.isNotEmpty(dataManager.getEmployeeList()));
		assertEquals(6,dataManager.getEmployeeList().size());
		
		assertNotNull(dataManager.getCompanyList());
		logger.info("Company List:"+dataManager.getCompanyList());
		assertTrue(CollectionUtils.isNotEmpty(dataManager.getCompanyList()));
		assertEquals(3,dataManager.getCompanyList().size());
	}
	
	@Ignore
	@Test
	public void testLoadFalse() {
		assertTrue(false);	
	}

}
